# Generated by Django 4.2.7 on 2025-08-24 11:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0009_rename_orders_orde_order_h_idx_orders_orde_order_i_f85ce2_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('companies', '0001_initial'),
        ('policies', '0012_rename_rebatematrix_commissionmatrix_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommissionGradeTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_type', models.CharField(choices=[('monthly', '월별'), ('quarterly', '분기별'), ('yearly', '연별'), ('lifetime', '누적')], max_length=20, verbose_name='기간 타입')),
                ('period_start', models.DateField(verbose_name='기간 시작일')),
                ('period_end', models.DateField(verbose_name='기간 종료일')),
                ('current_orders', models.IntegerField(default=0, verbose_name='현재 주문 수')),
                ('target_orders', models.IntegerField(verbose_name='목표 주문 수')),
                ('achieved_grade_level', models.IntegerField(default=0, verbose_name='달성 그레이드 레벨')),
                ('bonus_per_order', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='주문당 보너스 수수료')),
                ('total_bonus', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='총 보너스 금액')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_tracking', to='companies.company', verbose_name='업체')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_tracking', to='policies.policy', verbose_name='정책')),
            ],
            options={
                'verbose_name': '수수료 그레이드 추적',
                'verbose_name_plural': '수수료 그레이드 추적',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Settlement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='정산 ID')),
                ('rebate_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='리베이트 금액')),
                ('status', models.CharField(choices=[('pending', '정산 대기'), ('approved', '정산 승인'), ('paid', '입금 완료'), ('unpaid', '미입금'), ('cancelled', '취소됨')], default='pending', max_length=20, verbose_name='정산 상태')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='승인일시')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='지급일시')),
                ('payment_method', models.CharField(blank=True, help_text='계좌이체, 현금, 카드 등', max_length=50, verbose_name='입금 방법')),
                ('payment_reference', models.CharField(blank=True, help_text='거래번호, 승인번호 등', max_length=100, verbose_name='입금 참조번호')),
                ('expected_payment_date', models.DateField(blank=True, help_text='입금이 예상되는 날짜', null=True, verbose_name='입금 예정일')),
                ('rebate_due_date', models.DateField(blank=True, help_text='협력사 또는 판매점별로 설정된 리베이트 지급 예정일', null=True, verbose_name='리베이트 지급 예정일')),
                ('notes', models.TextField(blank=True, verbose_name='메모')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_settlements', to=settings.AUTH_USER_MODEL, verbose_name='승인자')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settlements', to='companies.company', verbose_name='정산 대상 업체')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settlements', to='orders.order', verbose_name='주문')),
            ],
            options={
                'verbose_name': '정산',
                'verbose_name_plural': '정산 목록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SettlementBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='배치 ID')),
                ('title', models.CharField(max_length=200, verbose_name='배치명')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('start_date', models.DateField(verbose_name='시작일')),
                ('end_date', models.DateField(verbose_name='종료일')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='총 정산 금액')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='승인일시')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_batches', to=settings.AUTH_USER_MODEL, verbose_name='승인자')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='생성자')),
            ],
            options={
                'verbose_name': '정산 배치',
                'verbose_name_plural': '정산 배치 목록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GradeBonusSettlement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bonus_amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='보너스 금액')),
                ('status', models.CharField(choices=[('pending', '정산 대기'), ('approved', '정산 승인'), ('paid', '지급 완료'), ('cancelled', '취소됨')], default='pending', max_length=20, verbose_name='정산 상태')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='승인일시')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='지급일시')),
                ('notes', models.TextField(blank=True, verbose_name='메모')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_bonus_settlements', to=settings.AUTH_USER_MODEL, verbose_name='승인자')),
                ('grade_tracking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonus_settlements', to='settlements.commissiongradetracking', verbose_name='그레이드 추적')),
            ],
            options={
                'verbose_name': '그레이드 보너스 정산',
                'verbose_name_plural': '그레이드 보너스 정산',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GradeAchievementHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('from_level', models.IntegerField(verbose_name='이전 레벨')),
                ('to_level', models.IntegerField(verbose_name='변경 레벨')),
                ('orders_at_change', models.IntegerField(verbose_name='변경시 주문 수')),
                ('bonus_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='보너스 금액')),
                ('achieved_at', models.DateTimeField(auto_now_add=True, verbose_name='달성일시')),
                ('grade_tracking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievement_history', to='settlements.commissiongradetracking', verbose_name='그레이드 추적')),
            ],
            options={
                'verbose_name': '그레이드 달성 이력',
                'verbose_name_plural': '그레이드 달성 이력',
                'ordering': ['-achieved_at'],
            },
        ),
        migrations.CreateModel(
            name='CommissionFact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_key', models.DateField(verbose_name='날짜 차원')),
                ('carrier', models.CharField(help_text='SKT, KT, LG, all', max_length=10, verbose_name='통신사')),
                ('plan_range', models.IntegerField(help_text='요금제 금액대 (11000, 22000, ...165000)', verbose_name='요금제 범위')),
                ('contract_period', models.IntegerField(help_text='계약기간 (12, 24, 36, 48개월)', verbose_name='계약기간')),
                ('base_commission', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='기본 수수료')),
                ('grade_bonus', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='그레이드 보너스')),
                ('total_commission', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='총 수수료')),
                ('settlement_status', models.CharField(help_text='pending, approved, paid, unpaid, cancelled', max_length=20, verbose_name='정산 상태')),
                ('payment_status', models.CharField(help_text='pending, paid, unpaid', max_length=20, verbose_name='입금 상태')),
                ('order_count_in_period', models.IntegerField(default=1, help_text='해당 기간 내 업체의 누적 주문 수', verbose_name='기간 내 주문 수')),
                ('achieved_grade_level', models.IntegerField(default=0, verbose_name='달성 그레이드 레벨')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('batch_id', models.CharField(blank=True, help_text='ETL 배치 처리 시 사용되는 배치 식별자', max_length=100, verbose_name='배치 ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commission_facts', to='companies.company', verbose_name='업체')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commission_facts', to='orders.order', verbose_name='주문')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commission_facts', to='policies.policy', verbose_name='정책')),
            ],
            options={
                'verbose_name': '수수료 팩트',
                'verbose_name_plural': '수수료 팩트 테이블',
                'ordering': ['-date_key', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SettlementStatusHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('from_status', models.CharField(choices=[('pending', '정산 대기'), ('approved', '정산 승인'), ('paid', '입금 완료'), ('unpaid', '미입금'), ('cancelled', '취소됨')], max_length=20, verbose_name='이전 상태')),
                ('to_status', models.CharField(choices=[('pending', '정산 대기'), ('approved', '정산 승인'), ('paid', '입금 완료'), ('unpaid', '미입금'), ('cancelled', '취소됨')], max_length=20, verbose_name='변경 상태')),
                ('reason', models.TextField(blank=True, verbose_name='변경 사유')),
                ('changed_at', models.DateTimeField(auto_now_add=True, verbose_name='변경일시')),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='사용자 IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='사용자 에이전트')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='변경자')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='settlements.settlement', verbose_name='정산')),
            ],
            options={
                'verbose_name': '정산 상태 이력',
                'verbose_name_plural': '정산 상태 이력',
                'ordering': ['-changed_at'],
                'indexes': [models.Index(fields=['settlement', 'changed_at'], name='settlements_settlem_702bc9_idx'), models.Index(fields=['to_status'], name='settlements_to_stat_bd2c55_idx'), models.Index(fields=['changed_by'], name='settlements_changed_0471a0_idx')],
            },
        ),
        migrations.CreateModel(
            name='SettlementBatchItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='추가일시')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='settlements.settlementbatch', verbose_name='배치')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_items', to='settlements.settlement', verbose_name='정산')),
            ],
            options={
                'verbose_name': '정산 배치 항목',
                'verbose_name_plural': '정산 배치 항목',
                'indexes': [models.Index(fields=['batch', 'settlement'], name='settlements_batch_i_e87d97_idx')],
                'unique_together': {('batch', 'settlement')},
            },
        ),
        migrations.AddIndex(
            model_name='settlementbatch',
            index=models.Index(fields=['start_date', 'end_date'], name='settlements_start_d_b5f379_idx'),
        ),
        migrations.AddIndex(
            model_name='settlementbatch',
            index=models.Index(fields=['created_at'], name='settlements_created_8752c1_idx'),
        ),
        migrations.AddIndex(
            model_name='settlement',
            index=models.Index(fields=['order', 'company'], name='settlements_order_i_a9932d_idx'),
        ),
        migrations.AddIndex(
            model_name='settlement',
            index=models.Index(fields=['company', 'status'], name='settlements_company_dc0da0_idx'),
        ),
        migrations.AddIndex(
            model_name='settlement',
            index=models.Index(fields=['status', 'created_at'], name='settlements_status_8c7d7a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='settlement',
            unique_together={('order', 'company')},
        ),
        migrations.AddIndex(
            model_name='gradebonussettlement',
            index=models.Index(fields=['grade_tracking', 'status'], name='settlements_grade_t_a84cb5_idx'),
        ),
        migrations.AddIndex(
            model_name='gradebonussettlement',
            index=models.Index(fields=['status', 'created_at'], name='settlements_status_e69b3b_idx'),
        ),
        migrations.AddIndex(
            model_name='gradeachievementhistory',
            index=models.Index(fields=['grade_tracking', 'achieved_at'], name='settlements_grade_t_034c1f_idx'),
        ),
        migrations.AddIndex(
            model_name='gradeachievementhistory',
            index=models.Index(fields=['to_level'], name='settlements_to_leve_bc0c05_idx'),
        ),
        migrations.AddIndex(
            model_name='commissiongradetracking',
            index=models.Index(fields=['company', 'period_type'], name='settlements_company_75be3a_idx'),
        ),
        migrations.AddIndex(
            model_name='commissiongradetracking',
            index=models.Index(fields=['policy', 'period_start', 'period_end'], name='settlements_policy__97e460_idx'),
        ),
        migrations.AddIndex(
            model_name='commissiongradetracking',
            index=models.Index(fields=['achieved_grade_level'], name='settlements_achieve_6ac4de_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='commissiongradetracking',
            unique_together={('company', 'policy', 'period_type', 'period_start')},
        ),
        migrations.AddIndex(
            model_name='commissionfact',
            index=models.Index(fields=['date_key', 'company'], name='settlements_date_ke_637f58_idx'),
        ),
        migrations.AddIndex(
            model_name='commissionfact',
            index=models.Index(fields=['date_key', 'policy'], name='settlements_date_ke_ba08ad_idx'),
        ),
        migrations.AddIndex(
            model_name='commissionfact',
            index=models.Index(fields=['company', 'settlement_status'], name='settlements_company_ff0d95_idx'),
        ),
        migrations.AddIndex(
            model_name='commissionfact',
            index=models.Index(fields=['policy', 'date_key'], name='settlements_policy__fdd463_idx'),
        ),
        migrations.AddIndex(
            model_name='commissionfact',
            index=models.Index(fields=['carrier', 'plan_range'], name='settlements_carrier_3bb2b9_idx'),
        ),
        migrations.AddIndex(
            model_name='commissionfact',
            index=models.Index(fields=['achieved_grade_level'], name='settlements_achieve_c7fec2_idx'),
        ),
        migrations.AddIndex(
            model_name='commissionfact',
            index=models.Index(fields=['batch_id'], name='settlements_batch_i_9b3163_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='commissionfact',
            unique_together={('order', 'company')},
        ),
    ]
