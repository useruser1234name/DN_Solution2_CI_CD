import React, { useState } from 'react';
import { Form, Input, Select, Button, message, Card, Row, Col, Alert } from 'antd';
import { post } from '../services/api';
import PolicyExposureModal from './PolicyExposureModal';
import OrderFormBuilder from './OrderFormBuilder';
import './PolicyCreateForm.css';

const { Option } = Select;
const { TextArea } = Input;

const PolicyCreateForm = ({ onSuccess, onCancel }) => {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);
  const [createdPolicy, setCreatedPolicy] = useState(null);
  const [showExposureModal, setShowExposureModal] = useState(false);
  const [showOrderFormModal, setShowOrderFormModal] = useState(false);

  const formTypes = [
    { value: 'individual', label: 'Í∞úÏù∏' },
    { value: 'business', label: 'Í∏∞ÏóÖ' },
    { value: 'general', label: 'ÏùºÎ∞ò' }
  ];

  const carriers = [
    { value: 'skt', label: 'SKT' },
    { value: 'kt', label: 'KT' },
    { value: 'lg', label: 'LG U+' },
    { value: 'altheon', label: 'ÏïåÎú∞Ìè∞' }
  ];

  const contractPeriods = [
    { value: '12', label: '12Í∞úÏõî' },
    { value: '24', label: '24Í∞úÏõî' },
    { value: '36', label: '36Í∞úÏõî' }
  ];

  const handleSubmit = async (values) => {
    setLoading(true);
    try {
      const response = await post('api/policies/api/create/', values);
      
      if (response.success) {
        message.success('Ï†ïÏ±ÖÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§.');
        setCreatedPolicy(response.policy);
        
        // Ï†ïÏ±Ö ÏÉùÏÑ± ÌõÑ ÌòëÎ†•ÏÇ¨ ÏÑ†ÌÉù Î™®Îã¨ ÏûêÎèô ÌëúÏãú
        setShowExposureModal(true);
        
        if (onSuccess) {
          onSuccess(response.policy);
        }
      }
    } catch (error) {
      message.error('Ï†ïÏ±Ö ÏÉùÏÑ±Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
      console.error('Error creating policy:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleExposureModalClose = () => {
    setShowExposureModal(false);
    // ÌòëÎ†•ÏÇ¨ ÏÑ†ÌÉù ÏôÑÎ£å ÌõÑ Ï£ºÎ¨∏ÏÑú ÏñëÏãù ÏÑ§Í≥Ñ Î™®Îã¨ ÌëúÏãú
    setShowOrderFormModal(true);
  };

  const handleOrderFormModalClose = () => {
    setShowOrderFormModal(false);
    // Î™®Îì† Î™®Îã¨Ïù¥ Îã´Ìûå ÌõÑ Ìèº Ï¥àÍ∏∞Ìôî
    form.resetFields();
    setCreatedPolicy(null);
  };

  return (
    <>
      <Card title="ÏÉà Ï†ïÏ±Ö ÏÉùÏÑ±" className="policy-create-card">
        <Form
          form={form}
          layout="vertical"
          onFinish={handleSubmit}
          initialValues={{
            form_type: 'general',
            carrier: 'skt',
            contract_period: '24',
            expose: true,
            premium_market_expose: false
          }}
        >
          <Row gutter={16}>
            <Col span={12}>
              <Form.Item
                name="title"
                label="Ï†ïÏ±ÖÎ™Ö"
                rules={[{ required: true, message: 'Ï†ïÏ±ÖÎ™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî' }]}
              >
                <Input placeholder="Ï†ïÏ±ÖÎ™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî" />
              </Form.Item>
            </Col>
            <Col span={12}>
              <Form.Item
                name="form_type"
                label="Ïã†Ï≤≠ÏÑú ÌÉÄÏûÖ"
                rules={[{ required: true, message: 'Ïã†Ï≤≠ÏÑú ÌÉÄÏûÖÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî' }]}
              >
                <Select placeholder="Ïã†Ï≤≠ÏÑú ÌÉÄÏûÖÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî">
                  {formTypes.map(type => (
                    <Option key={type.value} value={type.value}>
                      {type.label}
                    </Option>
                  ))}
                </Select>
              </Form.Item>
            </Col>
          </Row>

          <Row gutter={16}>
            <Col span={12}>
              <Form.Item
                name="carrier"
                label="ÌÜµÏã†ÏÇ¨"
                rules={[{ required: true, message: 'ÌÜµÏã†ÏÇ¨Î•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî' }]}
              >
                <Select placeholder="ÌÜµÏã†ÏÇ¨Î•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî">
                  {carriers.map(carrier => (
                    <Option key={carrier.value} value={carrier.value}>
                      {carrier.label}
                    </Option>
                  ))}
                </Select>
              </Form.Item>
            </Col>
            <Col span={12}>
              <Form.Item
                name="contract_period"
                label="Í∞ÄÏûÖÍ∏∞Í∞Ñ"
                rules={[{ required: true, message: 'Í∞ÄÏûÖÍ∏∞Í∞ÑÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî' }]}
              >
                <Select placeholder="Í∞ÄÏûÖÍ∏∞Í∞ÑÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî">
                  {contractPeriods.map(period => (
                    <Option key={period.value} value={period.value}>
                      {period.period}
                    </Option>
                  ))}
                </Select>
              </Form.Item>
            </Col>
          </Row>

          <Form.Item
            name="description"
            label="Ï†ïÏ±Ö ÏÑ§Î™Ö"
          >
            <TextArea rows={3} placeholder="Ï†ïÏ±ÖÏóê ÎåÄÌïú ÏÑ§Î™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî" />
          </Form.Item>

          <Row gutter={16}>
            <Col span={24}>
              <Alert
                message="Î¶¨Î≤†Ïù¥Ìä∏ ÏÑ§Ï†ï ÏïàÎÇ¥"
                description="Î≥∏ÏÇ¨Îäî ÌòëÎ†•ÏÇ¨ÏóêÍ≤å Ï§Ñ Î¶¨Î≤†Ïù¥Ìä∏Îßå ÏÑ§Ï†ïÌï©ÎãàÎã§. ÌåêÎß§Ï†ê Î¶¨Î≤†Ïù¥Ìä∏Îäî Í∞Å ÌòëÎ†•ÏÇ¨Í∞Ä ÎßàÏßÑÏùÑ Í≥†Î†§ÌïòÏó¨ Í∞úÎ≥Ñ ÏÑ§Ï†ïÌï©ÎãàÎã§."
                type="info"
                showIcon
                style={{ marginBottom: 16 }}
              />
            </Col>
          </Row>
          
          <Row gutter={16}>
            <Col span={12}>
              <Form.Item
                name="rebate_agency"
                label="ÌòëÎ†•ÏÇ¨ Î¶¨Î≤†Ïù¥Ìä∏"
                rules={[{ required: true, message: 'ÌòëÎ†•ÏÇ¨ Î¶¨Î≤†Ïù¥Ìä∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî' }]}
              >
                <Input 
                  placeholder="ÌòëÎ†•ÏÇ¨ÏóêÍ≤å ÏßÄÍ∏âÌï† Î¶¨Î≤†Ïù¥Ìä∏" 
                  suffix="Ïõê"
                  type="number"
                />
              </Form.Item>
            </Col>
            <Col span={12}>
              <div style={{ padding: '32px 0', textAlign: 'center', color: '#666' }}>
                <div style={{ fontSize: '14px', marginBottom: '8px' }}>
                  üìä <strong>ÌåêÎß§Ï†ê Î¶¨Î≤†Ïù¥Ìä∏</strong>
                </div>
                <div style={{ fontSize: '12px' }}>
                  ÌòëÎ†•ÏÇ¨Í∞Ä Í∞úÎ≥Ñ ÏÑ§Ï†ï
                </div>
              </div>
            </Col>
          </Row>

          <Row gutter={16}>
            <Col span={12}>
              <Form.Item
                name="expose"
                label="ÏùºÎ∞ò ÎÖ∏Ï∂ú"
                valuePropName="checked"
              >
                <Select>
                  <Option value={true}>ÎÖ∏Ï∂ú</Option>
                  <Option value={false}>ÎπÑÎÖ∏Ï∂ú</Option>
                </Select>
              </Form.Item>
            </Col>
            <Col span={12}>
              <Form.Item
                name="premium_market_expose"
                label="ÌîÑÎ¶¨ÎØ∏ÏóÑ ÎßàÏºì ÎÖ∏Ï∂ú"
                valuePropName="checked"
              >
                <Select>
                  <Option value={true}>ÎÖ∏Ï∂ú</Option>
                  <Option value={false}>ÎπÑÎÖ∏Ï∂ú</Option>
                </Select>
              </Form.Item>
            </Col>
          </Row>

          <Form.Item>
            <div className="form-actions">
              <Button onClick={onCancel}>
                Ï∑®ÏÜå
              </Button>
              <Button 
                type="primary" 
                htmlType="submit"
                loading={loading}
              >
                Ï†ïÏ±Ö ÏÉùÏÑ±
              </Button>
            </div>
          </Form.Item>
        </Form>
      </Card>

      {/* ÌòëÎ†•ÏÇ¨ ÏÑ†ÌÉù Î™®Îã¨ */}
      {createdPolicy && (
        <PolicyExposureModal
          visible={showExposureModal}
          onClose={handleExposureModalClose}
          policyId={createdPolicy.id}
          policyTitle={createdPolicy.title}
        />
      )}

      {/* Ï£ºÎ¨∏ÏÑú ÏñëÏãù ÏÑ§Í≥Ñ Î™®Îã¨ */}
      {createdPolicy && (
        <OrderFormBuilder
          visible={showOrderFormModal}
          onClose={handleOrderFormModalClose}
          policyId={createdPolicy.id}
          policyTitle={createdPolicy.title}
        />
      )}
    </>
  );
};

export default PolicyCreateForm;
